var searchIndex = new Map(JSON.parse('[\
["datagen",{"t":"FNNNNNNNNNNNNHNNNNN","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","main","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut"],"q":[[0,"datagen"],[19,"clap_builder::builder::command"],[20,"core::fmt"],[21,"clap_builder::parser::matches::arg_matches"],[22,"clap_builder"],[23,"core::result"],[24,"clap_builder::util::id"],[25,"core::option"],[26,"core::any"]],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2],"f":"`{bb}0{ce{}{}}0{{}b}0{{df}h}{cc{}}{j{{n{dl}}}}0{{}{{Ab{A`}}}}5{{}Ad}{c{{n{e}}}{}{}}0{cAf{}}{{dj}{{n{Adl}}}}0","D":"d","p":[[5,"Command",19],[5,"Args",0],[5,"Formatter",20],[8,"Result",20],[5,"ArgMatches",21],[8,"Error",22],[6,"Result",23],[5,"Id",24],[6,"Option",25],[1,"unit"],[5,"TypeId",26]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABEAAwAAAAgACgACAA4ABQA="}],\
["pabi",{"t":"SECCCHCCCHHSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSHCCCCCCCFSSSSSSSSOHHNNONNNHHNHHOHHHHONNNOFFFNNNONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNOOONNNNNNNNNNNNNNNNNNPPPPPPPPPTPPPPPPPPPTTTSSPPPPPPPPPPPPFGPPPPPPPPPGPPPPPPPPPPPPPPPPPPPTGPPPPPPPPPPPPPPPPPPPPPSFITTTPFGGPPGPPPPPPPPPPGFTTPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFNNNNNNONOOOONNNNSSSSSSSSSSSSSSSSSSSSSSHFNNONNONNNONNNNOHHHHNHHONNNONNNNNNNNNHNONNNNNNNNNNHOIFNNNNNNNONNNFNNONNNONNNHOONNNCNNNCNGPGPPPPPGPPPPPPPPPPNNNNNNNNNNNNNNNNNNNHHHNNNNNNNNNOOOOOOOOOOOOKPKGPKPMMNNNMNMNNNCCICCCHHHHHFFONNNNOONNNNOOONNNNNNNOO","n":["BUILD_FEATURES","Engine","build","chess","engine","engine_version","environment","evaluation","mcts","print_binary_info","print_engine_info","BRANCH","BUILD_OS","BUILD_RUST_CHANNEL","BUILD_TARGET","BUILD_TARGET_ARCH","BUILD_TIME","BUILD_TIME_2822","BUILD_TIME_3339","CARGO_MANIFEST_DIR","CARGO_TREE","CARGO_VERSION","CLAP_LONG_VERSION","CLAP_VERSION","COMMIT_AUTHOR","COMMIT_DATE","COMMIT_DATE_2822","COMMIT_DATE_3339","COMMIT_EMAIL","COMMIT_HASH","GIT_CLEAN","GIT_STATUS_FILE","LAST_TAG","PKG_DESCRIPTION","PKG_VERSION","PKG_VERSION_MAJOR","PKG_VERSION_MINOR","PKG_VERSION_PATCH","PKG_VERSION_PRE","PROJECT_NAME","RUST_CHANNEL","RUST_VERSION","SHORT_COMMIT","TAG","VERSION","print_build_in","attacks","bitboard","core","game","generated","position","zobrist","AttackInfo","BLACK_LONG_CASTLE_KING_WALK","BLACK_LONG_CASTLE_ROOK_WALK","BLACK_SHORT_CASTLE_KING_WALK","BLACK_SHORT_CASTLE_ROOK_WALK","WHITE_LONG_CASTLE_KING_WALK","WHITE_LONG_CASTLE_ROOK_WALK","WHITE_SHORT_CASTLE_KING_WALK","WHITE_SHORT_CASTLE_ROOK_WALK","attacks","bishop_attacks","bishop_ray","borrow","borrow_mut","checkers","fmt","from","into","king_attacks","knight_attacks","new","pawn_attacks","pext","pins","queen_attacks","ray","rook_attacks","rook_ray","safe_king_squares","try_from","try_into","type_id","xrays","Bitboard","BitboardIterator","Pieces","all","as_square","at","bishops","bitand","bitand_assign","bitboard_for_mut","bitor","bitor_assign","bits","bits","bits","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","contains","count","empty","empty","eq","eq","extend","flip_perspective","fmt","from","from","from","from","from_bits","from_squares","full","has_any","into","into","into","into_iter","is_empty","iter","king","knights","len","next","not","pawns","queens","rooks","shift","shl","shr","starting","sub","sub_assign","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","A","A1","A2","A3","A4","A5","A6","A7","A8","ALL","B","B1","B2","B3","B4","B5","B6","B7","B8","BLACK_BOTH","BLACK_LONG","BLACK_SHORT","BOARD_SIZE","BOARD_WIDTH","Bishop","Bishop","Black","C","C1","C2","C3","C4","C5","C6","C7","C8","CastleRights","Color","D","D1","D2","D3","D4","D5","D6","D7","D8","Direction","Down","E","E1","E2","E3","E4","E5","E6","E7","E8","F","F1","F2","F3","F4","F5","F6","F7","F8","FROM_MASK","File","G","G1","G2","G3","G4","G5","G6","G7","G8","H","H1","H2","H3","H4","H5","H6","H7","H8","King","Knight","Knight","MAX_MOVES","Move","MoveList","NONE","PROMOTION_MASK","PROMOTION_OFFSET","Pawn","Piece","PieceKind","Promotion","Queen","Queen","Rank","Rank1","Rank2","Rank3","Rank4","Rank5","Rank6","Rank7","Rank8","Rook","Rook","Square","SquareIterator","TO_MASK","TO_OFFSET","Up","WHITE_BOTH","WHITE_LONG","WHITE_SHORT","White","all","as_packed_int","backrank","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","color","complement","contains","current","difference","empty","eq","eq","eq","eq","eq","eq","eq","eq","extend","file","flip_perspective","flip_perspective","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","from_uci","get_index","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_empty","iter","iter","iter_names","kind","len","mask","new","new","next","next","not","not","opposite","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pawn_push_direction","pawns_starting","plane","promotion","rank","remove","set","shift","sub","sub_assign","symmetric_difference","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","xs","Game","actions","apply","borrow","borrow_mut","from","into","moves","new","outcome","perspective","position","repetitions","result","try_from","try_into","type_id","BISHOP_ATTACKS","BISHOP_ATTACKS_COUNT","BISHOP_ATTACK_OFFSETS","BISHOP_RAYS","BISHOP_RELEVANT_OCCUPANCIES","BLACK_CAN_CASTLE_LONG","BLACK_CAN_CASTLE_SHORT","BLACK_PAWN_ATTACKS","BLACK_TO_MOVE","EN_PASSANT_FILES","KING_ATTACKS","KNIGHT_ATTACKS","PIECES_ZOBRIST_KEYS","RAYS","ROOK_ATTACKS","ROOK_ATTACKS_COUNT","ROOK_ATTACK_OFFSETS","ROOK_RAYS","ROOK_RELEVANT_OCCUPANCIES","WHITE_CAN_CASTLE_LONG","WHITE_CAN_CASTLE_SHORT","WHITE_PAWN_ATTACKS","get_piece_key","Position","at","attack_info","black_pieces","borrow","borrow_mut","castling","clone","clone_into","compute_hash","en_passant_square","fmt","fmt","from","from_fen","fullmove_counter","generate_bishop_moves","generate_castle_moves","generate_king_moves","generate_knight_moves","generate_moves","generate_pawn_moves","generate_rook_moves","halfmove_clock","halfmove_clock_expired","handle_capture","hash","hash","in_check","into","is_legal","make_king_move","make_move","make_pawn_move","make_regular_move","occupancy","occupied_squares","perft","pieces","side_to_move","starting","them","to_owned","to_string","try_from","try_from","try_into","type_id","update_castling_rights","us","validate","white_pieces","Key","RepetitionTable","borrow","borrow_mut","clear","from","into","new","record","table","try_from","try_into","type_id","Engine","borrow","borrow_mut","debug","from","go","handshake","input","into","new","new_game","openbench","out","position","set_position","stop_search","sync","time_manager","try_from","try_into","type_id","uci","uci_loop","Command","Debug","EngineOption","Go","Hash","Integer","IsReady","NewGame","OptionValue","Quit","SetOption","SetPosition","State","Stop","String","SyzygyTablebase","Threads","Uci","Unknown","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","parse","parse_go","parse_setoption","parse_setposition","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","binc","btime","fen","infinite","max_depth","moves","movetime","on","option","value","winc","wtime","Action","Draw","Environment","GameResult","Loss","Observation","Win","actions","apply","borrow","borrow_mut","from","get_index","into","result","try_from","try_into","type_id","features","network","Depth","policy","search","tree","backup","expand","search","select","simulate","Node","Tree","actions","borrow","borrow","borrow_mut","borrow_mut","children","draws","from","from","into","into","losses","nodes","parent","try_from","try_from","try_into","try_into","type_id","type_id","visited","visits","wins"],"q":[[0,"pabi"],[11,"pabi::build"],[46,"pabi::chess"],[53,"pabi::chess::attacks"],[86,"pabi::chess::bitboard"],[162,"pabi::chess::core"],[512,"pabi::chess::game"],[529,"pabi::chess::generated"],[552,"pabi::chess::position"],[604,"pabi::chess::zobrist"],[617,"pabi::engine"],[640,"pabi::engine::uci"],[690,"pabi::engine::uci::Command"],[702,"pabi::environment"],[720,"pabi::evaluation"],[722,"pabi::mcts"],[726,"pabi::mcts::search"],[731,"pabi::mcts::tree"],[756,"alloc::string"],[757,"core::fmt"],[758,"core::result"],[759,"core::any"],[760,"core::option"],[761,"anyhow"],[762,"core::cmp"],[763,"core::iter::traits::collect"],[764,"core::hash"],[765,"bitflags::iter"],[766,"core::time"],[767,"std::io"],[768,"alloc::vec"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,5,5,5,5,5,5,0,0,5,0,0,5,0,0,0,0,5,5,5,5,5,0,0,0,9,4,9,9,4,4,9,4,4,4,18,4,4,18,4,9,18,4,9,4,4,9,4,9,4,4,4,9,4,9,4,4,4,18,4,4,9,4,4,4,4,18,4,9,18,4,4,9,9,18,18,4,9,9,9,4,4,4,9,4,4,4,9,18,4,9,18,4,4,9,18,4,9,27,3,3,3,3,3,3,3,3,22,27,3,3,3,3,3,3,3,3,22,22,22,0,0,13,28,8,27,3,3,3,3,3,3,3,3,0,0,27,3,3,3,3,3,3,3,3,0,20,27,3,3,3,3,3,3,3,3,27,3,3,3,3,3,3,3,3,23,0,27,3,3,3,3,3,3,3,3,27,3,3,3,3,3,3,3,3,13,13,28,0,0,0,22,23,23,13,0,0,0,13,28,0,25,25,25,25,25,25,25,25,13,28,0,0,23,23,20,22,22,22,8,22,23,25,22,22,22,22,22,22,22,22,36,32,23,3,27,25,8,13,22,28,20,36,32,23,3,27,25,8,13,22,28,20,23,3,27,25,8,13,22,28,20,23,3,27,25,8,13,22,28,20,3,27,25,32,22,22,36,22,22,23,3,27,25,8,13,22,28,22,3,23,3,32,23,23,3,3,27,27,25,25,8,8,13,13,22,22,22,22,22,22,28,20,36,32,23,23,3,27,25,8,13,13,22,28,28,20,22,22,22,22,22,22,23,23,22,22,22,22,36,32,23,3,27,25,8,13,22,28,20,36,22,22,22,3,22,22,32,44,25,23,3,36,3,8,22,20,3,27,25,13,28,8,25,32,23,3,22,22,3,22,22,22,23,23,3,27,25,8,13,22,28,20,32,23,3,27,25,8,13,22,22,36,32,32,23,23,3,3,3,3,27,27,27,25,25,25,8,8,13,22,22,28,20,36,32,23,3,27,25,8,13,22,28,20,36,32,23,3,27,25,8,13,22,28,20,22,44,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,41,0,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,41,41,41,41,41,41,41,41,41,41,41,41,0,41,0,0,45,45,45,45,45,45,45,45,45,45,45,0,46,46,46,46,46,46,46,46,46,46,0,46,46,46,46,46,0,46,46,46,0,46,0,52,0,52,53,54,52,52,0,52,52,52,52,52,54,53,53,52,52,52,53,54,52,53,54,52,53,54,52,53,54,52,53,54,52,53,54,52,0,0,0,52,53,54,52,53,54,52,53,54,59,59,60,59,59,60,59,61,62,62,59,59,0,42,0,0,42,0,42,55,55,42,42,42,56,42,55,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,58,63,58,63,58,58,58,63,58,63,58,58,63,58,63,58,63,58,63,58,58,58,58],"f":"`````{{}b}```{{}d}0``````````````````````````````````0`````````````````{{fh}h}{{ff}h}{ce{}{}}0`{{jl}n}{cc{}}2{fh}0{{A`Abfhh}j}{{fA`}h}{{AdAd}Ad}`8787`{c{{Af{e}}}{}{}}0{cAh{}}````{Abh}{hf}{{Abf}{{Al{Aj}}}}`{{hh}c{}}{{hh}d}{{AbAj}h}21{hAd}``3??????{{hf}d}{hh}{AbAb}{{ce}d{}{}}0{{hf}An}{hB`}{{}h}{{}Ab}{{hh}An}{{AbAb}An}98{{hl}n}{cc{}}0{fh}1{Adh}{{{Bb{f}}}h}8{hAn}{ce{}{}}0001{hBd}``{BdBf}{Bd{{Al{c}}}{}}{hc{}}```{{hBh}h}{{hB`}c{}}0{A`Ab}{{hh}c{}}{{hh}d}99{c{{Af{e}}}{}{}}0000{h{{Bj{f}}}}1{cAh{}}00``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{}Bl}{BnC`}{A`Cb}{{BlBl}Bl}{{BlBl}d}10{BlCd}021{ce{}{}}000000000000000000000{BnBn}{ff}{CfCf}{CbCb}{A`A`}{AjAj}{BlBl}{ChCh}{BhBh}{{ce}d{}{}}00000000{{ff}Cj}{{CfCf}Cj}{{CbCb}Cj}`6{{BlBl}An}`{{BlBl}Bl}{{}Bl}{{BnBn}An}{{ff}An}{{CfCf}An}{{CbCb}An}{{A`A`}An}{{AjAj}An}8{{ChCh}An}{{Blc}d{{Cn{}{{Cl{Bl}}}}}}{fCf}{BnBn}{ff}{{D`l}n}{{Bnl}n}0{{fl}n}0{{Cfl}n}0{{Cbl}n}0{{A`l}n}0{{Ajl}n}0{{Bll}n}00000{{Chl}n}{{Bhl}n}{cc{}}0{Bnf}11111{ChAj}22{DbCh}33{Cd{{Al{Bl}}}}{CdBl}00{cBl{{Cn{}{{Cl{Bl}}}}}}{Dd{{Al{Bl}}}}{Dd{{Bj{Bn}}}}{BnC`}{{Blc}dDf}{{BlBl}d}{{BlBl}Bl}{{BlBl}An}{ce{}{}}00000000000{Blc{}}{BlAn}0{{}Dh}{Bl{{Dj{Bl}}}}{Bl{{Dl{Bl}}}}``{Cbh}{{ff{Al{Ch}}}Bn}{{CfCb}f}{Dh{{Al{c}}}{}}{f{{Al{f}}}}{A`c{}}{BlBl}{BhBh}{{ff}{{Al{Cj}}}}{{CfCf}{{Al{Cj}}}}{{CbCb}{{Al{Cj}}}}{{AjAj}{{Al{Cj}}}}{{ChCh}{{Al{Cj}}}}{A`Bh}{A`Cb}{D`Bf}{Bn{{Al{Ch}}}}{fCb}{{BlBl}d}{{BlBlAn}d}{{fBh}{{Al{f}}}}{{BlBl}Bl}30{Bnf}{ce{}{}}00000000{cb{}}00000006{c{{Af{e}}}{}{}}0{Db{{Bj{D`}}}}{Dd{{Bj{Bn}}}}2{Cd{{Bj{f}}}}3{Dn{{Bj{f}}}}{Dd{{Bj{f}}}}{Cd{{Bj{Cf}}}}6{Db{{Bj{Cf}}}}{Db{{Bj{Cb}}}}{Cd{{Bj{Cb}}}}9{Dd{{Bj{A`}}}}::{Dd{{Bj{Bl}}}};;;;;;;;;;;;;;{cAh{}}0000000000{{BlBl}Bl}``{E`{{Bb{Bn}}}}{{E`Bn}Eb}{ce{}{}}0{cc{}}1`{EbE`}````{E`{{Al{Ed}}}}{c{{Af{e}}}{}{}}08``````````````````````{{D`f}Ef}`{{Ebf}{{Al{D`}}}}{Ebj}`77`{EbEb}{{ce}d{}{}}{EbEf}`{{Ebl}n}0:{Dd{{Bj{Eb}}}}`{{hhhhhfEh}d}{{A`hBlhhEh}d}{{fhEh}d}{{hhhhEh}d}{EbEh}{{hA`A`Abhhhhhf{Al{f}}hEh}d}5`{EbAn}{{EbBn}d}:`1{ce{}{}}2{{EbBn}An}202{{EbA`}h}{Ebh}{{EbCd}Ad}{{EbA`}Ab}`{{}Eb}{EbA`}7{cb{}}{c{{Af{e}}}{}{}}{Dd{{Bj{Eb}}}}1{cAh{}}<4{Eb{{Bj{d}}}}```<<{Ejd}{cc{}}>{{}Ej}{{EjEf}An}`775`{ce{}{}}0`3{{{El{ce}}{Al{En}}{Al{F`}}{Al{F`}}{Al{F`}}{Al{F`}}{Al{F`}}An}{{Bj{d}}}FbFd}{{{El{ce}}}{{Bj{d}}}FbFd}`2{{ce}{{El{ce}}}FbFd}1{{}d}``{{{El{ce}}{Al{b}}{Ff{b}}}{{Bj{d}}}FbFd}33`==;`3```````````````````555555{{FhFh}An}{{FjFj}An}{{FlFl}An}{{Fhl}n}{{Fjl}n}{{Fll}n}>>>;;;{DdFh}{{{Bb{Dd}}}Fh}00{c{{Af{e}}}{}{}}00000{cAh{}}00```````````````````{Fn{{Bb{c}}}G`}{{Fnc}eG`Gb}{ce{}{}}0{cc{}}{G`C`}2{Fn{{Al{Ed}}}}776``````{{}d}0{{BfEn}d}11```5555``4455```999988{{{Gd{c}}}AnG`}``","D":"AJj","p":[[5,"String",756],[1,"unit"],[6,"Square",162],[5,"Bitboard",86],[5,"AttackInfo",53],[5,"Formatter",757],[8,"Result",757],[6,"Color",162],[5,"Pieces",86],[1,"u64"],[6,"Result",758],[5,"TypeId",759],[6,"PieceKind",162],[6,"Option",760],[1,"bool"],[1,"u32"],[1,"slice"],[5,"BitboardIterator",86],[1,"usize"],[6,"Direction",162],[8,"Result",761],[5,"CastleRights",162],[5,"Move",162],[1,"u16"],[6,"Rank",162],[1,"u8"],[6,"File",162],[6,"Promotion",162],[6,"Ordering",762],[17,"Item"],[10,"IntoIterator",763],[5,"Piece",162],[1,"char"],[1,"str"],[10,"Hasher",764],[5,"SquareIterator",162],[5,"Iter",765],[5,"IterNames",765],[1,"i8"],[5,"Game",512],[5,"Position",552],[6,"GameResult",702],[8,"Key",604],[8,"MoveList",162],[5,"RepetitionTable",604],[5,"Engine",617],[8,"Depth",722],[5,"Duration",766],[10,"BufRead",767],[10,"Write",767],[5,"Vec",768],[6,"Command",640],[6,"EngineOption",640],[6,"OptionValue",640],[10,"Environment",702],[10,"Action",702],[10,"Observation",702],[5,"Node",731],[15,"Go",690],[15,"SetPosition",690],[15,"Debug",690],[15,"SetOption",690],[5,"Tree",731]],"r":[[1,617]],"b":[[291,"impl-Flags-for-CastleRights"],[292,"impl-CastleRights"],[357,"impl-Debug-for-Move"],[358,"impl-Display-for-Move"],[359,"impl-Display-for-Square"],[360,"impl-Debug-for-Square"],[361,"impl-Display-for-File"],[362,"impl-Debug-for-File"],[363,"impl-Debug-for-Rank"],[364,"impl-Display-for-Rank"],[365,"impl-Debug-for-Color"],[366,"impl-Display-for-Color"],[367,"impl-Debug-for-PieceKind"],[368,"impl-Display-for-PieceKind"],[369,"impl-Octal-for-CastleRights"],[370,"impl-UpperHex-for-CastleRights"],[371,"impl-Display-for-CastleRights"],[372,"impl-Debug-for-CastleRights"],[373,"impl-LowerHex-for-CastleRights"],[374,"impl-Binary-for-CastleRights"],[392,"impl-Flags-for-CastleRights"],[393,"impl-CastleRights"],[471,"impl-TryFrom%3Cu8%3E-for-Square"],[473,"impl-TryFrom%3Ci8%3E-for-Square"],[474,"impl-TryFrom%3C%26str%3E-for-Square"],[475,"impl-TryFrom%3Cu8%3E-for-File"],[477,"impl-TryFrom%3Cchar%3E-for-File"],[478,"impl-TryFrom%3Cchar%3E-for-Rank"],[479,"impl-TryFrom%3Cu8%3E-for-Rank"],[563,"impl-Debug-for-Position"],[564,"impl-Display-for-Position"]],"c":"OjAAAAEAAAAAAAAAEAAAABgA","e":"OzAAAAEAAB8CSwACAAAAGAAAADIAAQA2AA8ASAAOAFoACABkAAgAbgADAHMAAAB1AAIAfQAAAIAAAACCAAAAhgABAIkAAwCOAAMAlAAAAJYAMADJAAgA1AASAOgAFAAAAQMABwEBAAoBCQAWAQEAGQEDAB4BAQAkAQAAKAErAFYBAABZAQcAZQEBAGgBEQB8AQAAggEAAIUBAACJAQAAjwEBAJ8BAQCmAQEAqQEAAKsBAgCvAQkAvAEAAMABEQDTAQQA2QEAANsBCQDmARgAAAIFAAgCIAAqAgcAMwIAADgCBAA+AgEAQgIAAEQCAQBKAgMATwIBAFICCABcAgAAXgICAGYCAwBrAgIAbwIAAHQCAAB7AgQAgQILAI4CEQCmAhoAwwIGAMsCAADNAgMA1AIQAOkCCwA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
